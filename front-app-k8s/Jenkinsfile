pipeline{
    agent any

    environment {
        registry = "109669590912.dkr.ecr.us-east-1.amazonaws.com/dev-ecr"
    }

    stages{
        //stage('Checkout'){
        //    steps {
        //        // Checkout code repo
        //        checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkinsgit', url: 'git@github.com:StalinPilapanta/project_aws_k8s.git']]])
        //    }
        //}
        stage("dir"){
            steps{
                sh '''ls -ltr
                        cd front-app-k8s
                        npm --version
                        node --version
                      '''
            }
        }
        stage("Install"){
            steps{
                sh '''
                    cd front-app-k8s
                    npm install
                      '''
            }
        }
        stage("Build"){
            steps{
                sh '''
                    cd front-app-k8s
                    npm run build
                    '''
            }
        }
        stage("Push Image"){
            steps{
                sh'''
                    cd front-app-k8s
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $registry
                    docker build -t dev-ecr .
                    docker tag dev-ecr:latest $registry:latest
                    docker push $registry:latest
                '''
            }
        }
        stage("Deploy in EKS"){
            steps{
                sh'''
                    cd front-app-k8s
                    aws eks update-kubeconfig --region us-east-1 --name dev-eks
                    kubectl get nodes
                    kubectl apply -f front.yaml
                    kubectl delete -f deployment.yml
                    kubectl apply -f deployment.yml
                '''
            }
        }
    }
}